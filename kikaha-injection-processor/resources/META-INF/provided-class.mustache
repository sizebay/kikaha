package {{packageName}};

@SuppressWarnings("all")
{{#annotations}}
@{{.}}
{{/annotations}}
@javax.inject.Singleton
@javax.enterprise.inject.Typed( kikaha.core.cdi.ProducerFactory.class )
public class {{generatedClassName}} implements kikaha.core.cdi.ProducerFactory<{{returnType}}> {

	@javax.inject.Inject {{type}} factoryProvider;

	public {{returnType}} provide( kikaha.core.cdi.ProviderContext context ) throws kikaha.core.cdi.ServiceProviderException {
		try {
{{^expectsContext}}
			return factoryProvider.{{methodName}}();
{{/expectsContext}}
{{#expectsContext}}
			return factoryProvider.{{methodName}}( context );
{{/expectsContext}}
		} catch( Throwable cause ) {
			throw new kikaha.core.cdi.ServiceProviderException( cause );
		}
	}
}